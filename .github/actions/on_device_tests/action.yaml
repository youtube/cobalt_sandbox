name: On Device Test
description: Runs on-device tests.

runs:
  using: "composite"
  steps:
    - name: Install requirements
      run: |
        pip3 install grpcio==1.38.0 grpcio-tools==1.38.0
      shell: bash
    - name: Generate gRPC files
      run: |
        python -m grpc_tools.protoc -Itools/ --python_out=tools/ --grpc_python_out=tools/ tools/on_device_tests_gateway.proto
      shell: bash
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    - name: Set env vars
      run: |
        echo "PROJECT_NAME=$(gcloud config get-value project)" >> $GITHUB_ENV
        echo "GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
        echo "WORKFLOW=${{ github.workflow }}" >> $GITHUB_ENV

        # Boot loader env
        if [ "${COBALT_BOOTLOADER}" != "null" ]; then
          echo "LOADER_CONFIG=${{ matrix.config }}" >> $GITHUB_ENV
          echo "LOADER_PLATFORM=${COBALT_BOOTLOADER}" >> $GITHUB_ENV
        fi

        # dimension env
        if [ "${{ matrix.dimension }}" != "null" ]; then
          echo "DIMENSION=${{ matrix.dimension }}" >> $GITHUB_ENV
        fi

        # Shard env
        if [[ "${{matrix.shard}}" == 'black_box_test' || "${{matrix.shard}}" == 'evergreen_test' || "${{matrix.shard}}" == 'unit_test' ]]; then
          echo "SHARD_NAME=${{ matrix.shard }}" >> $GITHUB_ENV
          echo "TEST_TYPE=${{ matrix.shard }}" >> $GITHUB_ENV
        else
          echo "SHARD_NAME=unit_test_${{ matrix.shard }}" >> $GITHUB_ENV
          echo "TEST_TYPE=unit_test" >> $GITHUB_ENV
          echo "USE_SHARDING=1" >> $GITHUB_ENV
        fi
      shell: bash
    - name: trigger ${{ env.SHARD_NAME }} tests on ${{ matrix.platform }} platform
      run: |
        set -uxe
        SESSION_ID=$(
          python3 tools/on_device_tests_gateway_client.py \
            --token ${{ github.token }} \
            --change_id "${{ github.event.pull_request.head.sha || github.sha }}" \
            trigger \
            --test_type ${{ env.TEST_TYPE }} \
            --platform ${{ matrix.target_platform }} \
            --config ${{ matrix.config }} \
            --tag cobalt_github_${{ github.event_name }} \
            --builder_name github_${{ matrix.platform }}_tests \
            --build_number ${GITHUB_RUN_NUMBER} \
            ${LOADER_PLATFORM:+"--loader_config" "$LOADER_CONFIG"} \
            ${LOADER_PLATFORM:+"--loader_platform" "$LOADER_PLATFORM"} \
            # ${DIMENSION:+"--dimension" "$DIMENSION"} \
            ${USE_SHARDING:+"--unittest_shard_index" "${{ matrix.shard }}"} \
            --archive_path gs://${PROJECT_NAME}-test-artifacts-tmp/${WORKFLOW}/${GITHUB_RUN_NUMBER}/${{ matrix.platform }}_${{ matrix.config }}/artifacts.tar \
            --label github \
            --label ${{ github.event_name }} \
            --label ${{ github.workflow }} \
            --label actor-${{ github.actor }} \
            --label actor_id-${{ github.actor_id }} \
            --label triggering_actor-${{ github.triggering_actor }} \
            --label sha-${{ github.sha }} \
            --label repository-${{ github.repository }} \
            --label author-${{ github.event.pull_request.head.user.login || github.event.commits[0].author.username }} \
            --label author_id-${{ github.event.pull_request.head.user.id || github.event.commits[0].author.email }}
        )
        echo "SESSION_ID=$SESSION_ID" >> $GITHUB_ENV
      shell: bash
    - name: watch ${{ env.SHARD_NAME }} tests on ${{ matrix.platform }} platform
      run: |
        set -uxe
        python3 tools/on_device_tests_gateway_client.py \
          --token ${{ github.token }} \
          --change_id "${{ github.sha }}" \
          watch ${{ env.SESSION_ID }}
      shell: bash
