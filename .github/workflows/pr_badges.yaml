name: PR badges

on:
  pull_request_target:
    branches:
      - 'main'
      - '23.lts.1\+'
      - '22.lts.1\+'
      - '21.lts.1\+'
      - '20.lts.1\+'
      - '19.lts.1\+'
      - 'rc_11'
      - 'COBALT_9'

concurrency:
  group: '${{ github.workflow }}-${{ inputs.platform }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.sha }}'
  cancel-in-progress: true

permissions:
  pull-requests: write

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get the existing comments.
            const {data: comments} = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            })

            // Find any comment already made by the bot.
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Build Status')
            })
            const commentBody = `
            ## Build Status
            | Workflow  | Status                                                                                                                                                                                                                                               |
            | --------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
            | lint      | [![lint](${{github.server_url}}/${{github.repository}}/actions/workflows/lint.yaml/badge.svg?branch=${{ github.head_ref }})](${{github.server_url}}/${{github.repository}}/actions/workflows/lint.yaml?query=branch%3A${{ github.head_ref }})                |
            | Android   | [![android](${{github.server_url}}/${{github.repository}}/actions/workflows/android.yaml/badge.svg?branch=${{ github.head_ref }})](${{github.server_url}}/${{github.repository}}/actions/workflows/android.yaml?query=branch%3A${{ github.head_ref }})       |
            | Evergreen | [![evergreen](${{github.server_url}}/${{github.repository}}/actions/workflows/evergreen.yaml/badge.svg?branch=${{ github.head_ref }})](${{github.server_url}}/${{github.repository}}/actions/workflows/evergreen.yaml?query=branch%3A${{ github.head_ref }}) |
            | Linux     | [![linux](${{github.server_url}}/${{github.repository}}/actions/workflows/linux.yaml/badge.svg?branch=${{ github.head_ref }})](${{github.server_url}}/${{github.repository}}/actions/workflows/linux.yaml?query=branch%3A${{ github.head_ref }})             |
            | raspi-2   | [![raspi-2](${{github.server_url}}/${{github.repository}}/actions/workflows/raspi-2.yaml/badge.svg?branch=${{ github.head_ref }})](${{github.server_url}}/${{github.repository}}/actions/workflows/raspi-2.yaml?query=branch%3A${{ github.head_ref }})       |
            | stub      | [![stub](${{github.server_url}}/${{github.repository}}/actions/workflows/stub.yaml/badge.svg?branch=${{ github.head_ref }})](${{github.server_url}}/${{github.repository}}/actions/workflows/stub.yaml?query=branch%3A${{ github.head_ref }})                |
            | Win32     | [![win32](${{github.server_url}}/${{github.repository}}/actions/workflows/win32.yaml/badge.svg?branch=${{ github.head_ref }})](${{github.server_url}}/${{github.repository}}/actions/workflows/win32.yaml?query=branch%3A${{ github.head_ref }})             |
            `
            if (botComment) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
              })
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              body: commentBody
            })
